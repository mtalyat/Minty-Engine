====================
	ToString.h:
====================

template<>
inline String to_string(Attenuation const& obj)
{
	switch (obj)
	{
		case Attenuation::None: return "None";
		case Attenuation::InverseDistance: return "InverseDistance";
		case Attenuation::LinearDistance: return "LinearDistance";
		case Attenuation::ExponentialDistance: return "ExponentialDistance";

		default: return "";
	}
}

====================
	Parse.h
====================

Attenuation to_attenuation(String const& string);
Bool try_attenuation(String const& string, Attenuation& value);

template<>
inline void parse_to(String const& string, Attenuation& value)
{
    value = to_attenuation(string);
}

template<>
inline Bool parse_try(String const& string, Attenuation& value)
{
    return try_attenuation(string, value);
}

====================
	Parse.cpp
====================

Attenuation Minty::Parse::to_attenuation(String const& string)
{
	if (string == "None") return Attenuation::None;
	if (string == "InverseDistance") return Attenuation::InverseDistance;
	if (string == "LinearDistance") return Attenuation::LinearDistance;
	if (string == "ExponentialDistance") return Attenuation::ExponentialDistance;

	return Attenuation();
}

Bool Minty::Parse::try_attenuation(String const& string, Attenuation& value)
{
	value = to_attenuation(string);
	return value != Attenuation();
}


====================
	ToString.h:
====================

String to_string(ImageAspect const obj);

====================
	ToString.cpp
====================

String Minty::to_string(ImageAspect const obj)
{
    switch (obj)
	{
		case ImageAspect::Undefined: return "Undefined";
		case ImageAspect::Color: return "Color";
		case ImageAspect::Depth: return "Depth";

		default: return "";
	}
}

====================
	Parse.h
====================

ImageAspect to_image_aspect(String const& string);
Bool try_image_aspect(String const& string, ImageAspect& value);

template<>
inline void parse_to(String const& string, ImageAspect& value)
{
    value = to_image_aspect(string);
}

template<>
inline Bool parse_try(String const& string, ImageAspect& value)
{
    return try_image_aspect(string, value);
}

====================
	Parse.cpp
====================

ImageAspect Minty::Parse::to_image_aspect(String const& string)
{
	if (string == "Undefined") return ImageAspect::Undefined;
	if (string == "Color") return ImageAspect::Color;
	if (string == "Depth") return ImageAspect::Depth;

	return ImageAspect();
}

Bool Minty::Parse::try_image_aspect(String const& string, ImageAspect& value)
{
	value = to_image_aspect(string);
	return value != ImageAspect();
}

